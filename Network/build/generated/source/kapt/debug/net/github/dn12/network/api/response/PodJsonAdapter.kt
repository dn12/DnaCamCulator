// Code generated by moshi-kotlin-codegen. Do not edit.
@file:Suppress("DEPRECATION", "unused", "ClassName", "REDUNDANT_PROJECTION",
    "RedundantExplicitType", "LocalVariableName", "RedundantVisibilityModifier",
    "PLATFORM_CLASS_MAPPED_TO_KOTLIN")

package net.github.dn12.network.api.response

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import com.squareup.moshi.Types
import java.lang.NullPointerException
import kotlin.Int
import kotlin.String
import kotlin.Suppress
import kotlin.Unit
import kotlin.collections.List
import kotlin.collections.emptySet
import kotlin.text.buildString

public class PodJsonAdapter(
  moshi: Moshi
) : JsonAdapter<Pod>() {
  private val options: JsonReader.Options = JsonReader.Options.of("error", "numsubpods", "scanner",
      "subpods", "title")

  private val nullableStringAdapter: JsonAdapter<String?> = moshi.adapter(String::class.java,
      emptySet(), "error")

  private val nullableIntAdapter: JsonAdapter<Int?> = moshi.adapter(Int::class.javaObjectType,
      emptySet(), "numsubpods")

  private val nullableListOfNullableSubpodAdapter: JsonAdapter<List<Subpod?>?> =
      moshi.adapter(Types.newParameterizedType(List::class.java, Subpod::class.java), emptySet(),
      "subpods")

  public override fun toString(): String = buildString(25) {
      append("GeneratedJsonAdapter(").append("Pod").append(')') }

  public override fun fromJson(reader: JsonReader): Pod {
    var error: String? = null
    var numsubpods: Int? = null
    var scanner: String? = null
    var subpods: List<Subpod?>? = null
    var title: String? = null
    reader.beginObject()
    while (reader.hasNext()) {
      when (reader.selectName(options)) {
        0 -> error = nullableStringAdapter.fromJson(reader)
        1 -> numsubpods = nullableIntAdapter.fromJson(reader)
        2 -> scanner = nullableStringAdapter.fromJson(reader)
        3 -> subpods = nullableListOfNullableSubpodAdapter.fromJson(reader)
        4 -> title = nullableStringAdapter.fromJson(reader)
        -1 -> {
          // Unknown name, skip it.
          reader.skipName()
          reader.skipValue()
        }
      }
    }
    reader.endObject()
    return Pod(
        error = error,
        numsubpods = numsubpods,
        scanner = scanner,
        subpods = subpods,
        title = title
    )
  }

  public override fun toJson(writer: JsonWriter, value_: Pod?): Unit {
    if (value_ == null) {
      throw NullPointerException("value_ was null! Wrap in .nullSafe() to write nullable values.")
    }
    writer.beginObject()
    writer.name("error")
    nullableStringAdapter.toJson(writer, value_.error)
    writer.name("numsubpods")
    nullableIntAdapter.toJson(writer, value_.numsubpods)
    writer.name("scanner")
    nullableStringAdapter.toJson(writer, value_.scanner)
    writer.name("subpods")
    nullableListOfNullableSubpodAdapter.toJson(writer, value_.subpods)
    writer.name("title")
    nullableStringAdapter.toJson(writer, value_.title)
    writer.endObject()
  }
}
