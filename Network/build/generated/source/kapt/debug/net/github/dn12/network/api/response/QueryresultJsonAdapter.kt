// Code generated by moshi-kotlin-codegen. Do not edit.
@file:Suppress("DEPRECATION", "unused", "ClassName", "REDUNDANT_PROJECTION",
    "RedundantExplicitType", "LocalVariableName", "RedundantVisibilityModifier",
    "PLATFORM_CLASS_MAPPED_TO_KOTLIN")

package net.github.dn12.network.api.response

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import com.squareup.moshi.Types
import java.lang.NullPointerException
import kotlin.Int
import kotlin.String
import kotlin.Suppress
import kotlin.Unit
import kotlin.collections.List
import kotlin.collections.emptySet
import kotlin.text.buildString

public class QueryresultJsonAdapter(
  moshi: Moshi
) : JsonAdapter<Queryresult>() {
  private val options: JsonReader.Options = JsonReader.Options.of("numpods", "pods", "success",
      "version")

  private val nullableIntAdapter: JsonAdapter<Int?> = moshi.adapter(Int::class.javaObjectType,
      emptySet(), "numpods")

  private val nullableListOfNullablePodAdapter: JsonAdapter<List<Pod?>?> =
      moshi.adapter(Types.newParameterizedType(List::class.java, Pod::class.java), emptySet(),
      "pods")

  private val nullableStringAdapter: JsonAdapter<String?> = moshi.adapter(String::class.java,
      emptySet(), "success")

  public override fun toString(): String = buildString(33) {
      append("GeneratedJsonAdapter(").append("Queryresult").append(')') }

  public override fun fromJson(reader: JsonReader): Queryresult {
    var numpods: Int? = null
    var pods: List<Pod?>? = null
    var success: String? = null
    var version: String? = null
    reader.beginObject()
    while (reader.hasNext()) {
      when (reader.selectName(options)) {
        0 -> numpods = nullableIntAdapter.fromJson(reader)
        1 -> pods = nullableListOfNullablePodAdapter.fromJson(reader)
        2 -> success = nullableStringAdapter.fromJson(reader)
        3 -> version = nullableStringAdapter.fromJson(reader)
        -1 -> {
          // Unknown name, skip it.
          reader.skipName()
          reader.skipValue()
        }
      }
    }
    reader.endObject()
    return Queryresult(
        numpods = numpods,
        pods = pods,
        success = success,
        version = version
    )
  }

  public override fun toJson(writer: JsonWriter, value_: Queryresult?): Unit {
    if (value_ == null) {
      throw NullPointerException("value_ was null! Wrap in .nullSafe() to write nullable values.")
    }
    writer.beginObject()
    writer.name("numpods")
    nullableIntAdapter.toJson(writer, value_.numpods)
    writer.name("pods")
    nullableListOfNullablePodAdapter.toJson(writer, value_.pods)
    writer.name("success")
    nullableStringAdapter.toJson(writer, value_.success)
    writer.name("version")
    nullableStringAdapter.toJson(writer, value_.version)
    writer.endObject()
  }
}
